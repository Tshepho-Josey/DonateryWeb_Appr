// <auto-generated />
using System;
using DonateryWeb_Appr.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DonateryWeb_Appr.Migrations
{
    [DbContext(typeof(disasteralleviationfoundationdbContext))]
    [Migration("20231024214629_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DonateryWeb_Appr.Models.ActiveDisaster", b =>
                {
                    b.Property<Guid>("DisasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisasterAidTypeWanted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisasterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DisasterEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisasterLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DisasterStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DisasterId");

                    b.ToTable("ActiveDisasters");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.AllocationOfGood", b =>
                {
                    b.Property<Guid>("AllocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfAllocation")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DisasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DonationOfGoodsCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfItemsAllocated")
                        .HasColumnType("int");

                    b.HasKey("AllocationId");

                    b.HasIndex("DisasterId");

                    b.HasIndex("DonationOfGoodsCategoryId");

                    b.ToTable("AllocationOfGoods");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.AllocationOfMoney", b =>
                {
                    b.Property<Guid>("AllocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountAllocated")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfAllocation")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DisasterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AllocationId");

                    b.HasIndex("DisasterId");

                    b.ToTable("AllocationOfMoneys");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.AuthorisedUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AuthorisedUsers");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.DonationOfGood", b =>
                {
                    b.Property<Guid>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DonationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DonationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationDonor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonationNumberOfItems")
                        .HasColumnType("int");

                    b.HasKey("DonationId");

                    b.HasIndex("CategoryId");

                    b.ToTable("DonationOfGoods");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.DonationOfGoodsCategory", b =>
                {
                    b.Property<Guid>("DonationCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DonationCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DonationCategoryId");

                    b.ToTable("DonationOfGoodsCategories");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.DonationsOfMoney", b =>
                {
                    b.Property<Guid>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DonatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DonationAmount")
                        .HasColumnType("float");

                    b.Property<string>("DonationDonor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DonationId");

                    b.ToTable("DonationsOfMoneys");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.PurchasesOfGood", b =>
                {
                    b.Property<Guid>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountRequired")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DisasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DonationOfGoodsCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfItemsPurchased")
                        .HasColumnType("int");

                    b.HasKey("PurchaseId");

                    b.HasIndex("DisasterId");

                    b.HasIndex("DonationOfGoodsCategoryId");

                    b.ToTable("PurchasesOfGoods");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.AllocationOfGood", b =>
                {
                    b.HasOne("DonateryWeb_Appr.Models.ActiveDisaster", "Disaster")
                        .WithMany("AllocationOfGoods")
                        .HasForeignKey("DisasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonateryWeb_Appr.Models.DonationOfGoodsCategory", "DonationOfGoodsCategory")
                        .WithMany("AllocationOfGoods")
                        .HasForeignKey("DonationOfGoodsCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disaster");

                    b.Navigation("DonationOfGoodsCategory");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.AllocationOfMoney", b =>
                {
                    b.HasOne("DonateryWeb_Appr.Models.ActiveDisaster", "Disaster")
                        .WithMany("AllocationOfMoneys")
                        .HasForeignKey("DisasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disaster");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.DonationOfGood", b =>
                {
                    b.HasOne("DonateryWeb_Appr.Models.DonationOfGoodsCategory", "Category")
                        .WithMany("DonationOfGoods")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.PurchasesOfGood", b =>
                {
                    b.HasOne("DonateryWeb_Appr.Models.ActiveDisaster", "Disaster")
                        .WithMany("PurchasesOfGoods")
                        .HasForeignKey("DisasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonateryWeb_Appr.Models.DonationOfGoodsCategory", "DonationOfGoodsCategory")
                        .WithMany("PurchasesOfGoods")
                        .HasForeignKey("DonationOfGoodsCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disaster");

                    b.Navigation("DonationOfGoodsCategory");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.ActiveDisaster", b =>
                {
                    b.Navigation("AllocationOfGoods");

                    b.Navigation("AllocationOfMoneys");

                    b.Navigation("PurchasesOfGoods");
                });

            modelBuilder.Entity("DonateryWeb_Appr.Models.DonationOfGoodsCategory", b =>
                {
                    b.Navigation("AllocationOfGoods");

                    b.Navigation("DonationOfGoods");

                    b.Navigation("PurchasesOfGoods");
                });
#pragma warning restore 612, 618
        }
    }
}
